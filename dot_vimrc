let _data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(_data_dir . '/autoload/plug.vim'))
    silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

let _vim_config_dir = '~/.config/vim'
let _config_dir = has('nvim') ? stdpath('config') : _vim_config_dir
let $_common_plug_config = _vim_config_dir . '/common_plug.vim'
let $_common_setting_config = _vim_config_dir . '/common_setting.vim'
let $_plug_config = _config_dir . '/plug.vim'
let $_before_common_setting_config = _config_dir . '/before_common_setting.vim'
let $_after_common_setting_config = _config_dir . '/after_common_setting.vim'

call plug#begin()

source $_common_plug_config
source $_plug_config

call plug#end()

" use the same way to open terminal {{{
command! Sterm :split|terminal
" }}}

syntax on
filetype on
filetype plugin on
filetype indent on

if filereadable(expand($_before_common_setting_config))
    source $_before_common_setting_config
endif

source $_common_setting_config

if filereadable(expand($_after_common_setting_config))
    source $_after_common_setting_config
endif

" Load the host specific init script {{{
let $_custom_variable_vimrc = _config_dir . "/custom_init.vim"
if filereadable(expand($_custom_variable_vimrc))
    source $_custom_variable_vimrc
endif
" }}}
